name: tests

on:
  push:
    branches:
      - main
  pull_request: null

env:
  PY_COLORS: "1"

jobs:
  tests:
    name: tests
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
        with:
          channels: conda-forge
          channel-priority: strict
          show-channel-urls: true
          miniforge-version: latest
          python-version: 3.9

      - name: configure conda and install code
        shell: bash -el {0}
        run: |
          mamba install --yes \
            --file=requirements.txt \
            --file=requirements-dev.txt
          python -m pip install -v --no-deps --no-build-isolation -e .

      - name: test versions
        shell: bash -el {0}
        run: |
          pip uninstall conda-forge-metadata --yes
          [[ $(python setup.py --version) != "0.0.0" ]] || exit 1

          rm -rf dist/*
          python setup.py sdist
          pip install --no-deps --no-build-isolation dist/*.tar.gz
          pushd ..
          python -c "import conda_forge_metadata; assert conda_forge_metadata.__version__ != '0.0.0'"
          popd
          pip uninstall conda-forge-metadata --yes

          rm -rf dist/*
          python -m build --sdist . --outdir dist
          pip install --no-deps --no-build-isolation dist/*.tar.gz
          pushd ..
          python -c "import conda_forge_metadata; assert conda_forge_metadata.__version__ != '0.0.0'"
          popd
          pip uninstall conda-forge-metadata --yes

          python -m pip install -v --no-deps --no-build-isolation -e .

      - name: test
        shell: bash -el {0}
        run: |
          pytest -vvs tests
